function [y1] = JasonU10_ANN_TC(x1)
%
% Wind Speed (U10) estimates inside tropical cyclone environment
% This model was created using Jason-2 and Jason-3 data with targetted output from calibrated MetOp-A and MetOp-b data. 
% JasonU10_ANN_TC.m
% Created by Syarawi Sharoni 26/01/2020
%
% This matlab scipt is to estimates U10 for Jason altimeter inside tropical cyclone environment
% Output, [y1] = Jason U10 wind speed.
% The input file in matrix form.
% Input, x1 = N x 9 matrix input parameters as listed below
% Column 1 = Ku-band backscatter
% Column 2 = C-band backscatter
% Column 3 = Ku-band SWH
% Column 4 = C-band SWH
% Column 5 = Brightness Temperature 18.7 GHz
% Column 6 = Brightness Temperature 23.8 GHz
% Column 7 = Brightness Temperature 34.0 GHz
% Column 8 = Liquid Water Content (WL)
% Column 9 = Water Vapor Content (WV)
%
% Detail paper discussed this model is "Tropical cyclone wind speed estimation from the satellite altimeter derived ocean parameters - Syarawi Sharoni,2021"
% Please cite the above paper. TQ. 
%
%% script start here
%
% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [5.34;11.12;0;0;128.03;141.29;151.82;0;0];
x1_step1.gain = [0.1085776330076;0.145348837209302;0.0840124338402083;0.130650640188137;0.0138197899391929;0.0147874306839187;0.0161969549724652;0.632911392405063;0.0175592625109745];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.7631848105739109656;-3.0495950111479723788;0.35186590598286787701;0.61689280150036096551;0.70689328103053505892;2.4918006849818463699;-2.3201883394676605654;2.1904897870971993257;0.7229105148436024697;-0.76249764468360492486;0.75656127692162100651;-2.4529883399621228435;1.2742699070076719536;1.4723525260851491048;0.54058492098150712213];
IW1_1 = [-2.3466804838902053376 1.2712272758563551989 -0.33332547860416933405 -0.16146532421014703207 -2.4875181230191554249 0.60265211936064977394 -0.19232969875845176699 1.4070930869123592366 -1.0563478350046942023;0.78342067201207543636 -3.1770117164498268281 0.74579845579393244659 0.49544523497019538061 -3.2231781705308861774 -0.71607774153598591216 2.8356014599560430689 -1.2501684633466239038 0.60351200805476656885;-0.81156682489740838982 2.2039336816686181386 0.12118059740582785844 -0.27275483852696702503 0.86586136441731909041 0.044682818423230338811 1.1369357189621944748 -0.78878524945874606278 -0.42593772908556104539;-1.8277095002476340113 -0.67080146014469732574 0.93235284669083295928 0.21992193650784364056 4.2143609881055716926 1.5987090858198258481 0.019836114181950408042 -2.2520504777187984047 -3.8800809065828358868;-0.25750617566596495367 0.7071638989976160028 -0.49370927870030612006 -0.71704530808650546181 -0.25539761696266072288 -1.126979774390067579 0.95856076744971963066 0.23940666314850991836 -0.76468258658550658513;0.83159028436728943401 1.5229526803663482326 0.19804237927042525613 0.17860803374750894301 -2.7967289664436547625 -2.7752849308781604165 0.978608473651416233 0.31818325963769178433 3.4887822542145228155;2.5176041130899768916 -4.0468002470401955861 -0.28688528149349151741 0.20437608379946273218 -1.9501455153572402335 0.92702661808543995736 -3.5108927289653495407 2.2733936793069839943 1.1576723746981907315;0.44831131961177450584 1.3842074277122784487 0.14542835696022671232 0.24932577110639925211 -2.5671432769072008995 -1.377483335639998252 -0.61460604865201395874 0.57465432364621737982 3.0930908689824256896;0.15943572949577738962 0.50077991980393077309 -0.3049583887325629239 -0.44125158950937604097 0.8384673158771723811 -0.39494445157517854561 -0.58174160195533386464 0.33616418725209401552 0.27846999520312937237;0.22353386062148025704 -1.612867025589897807 0.25502704046626245571 0.29158145465900714433 -1.6859425711292004291 0.65384639889905249444 0.24639995448381574183 -0.15973070719903320613 0.15088353495549200467;-0.22501745387626395645 0.088914468731737139606 -0.33472751872752692925 0.36039026583239419654 0.38595201886836499883 0.463145529277501522 -2.1642744501098745147 0.86087169920557971015 -0.75285464524031364686;-1.9594986136004199917 0.21286388623797336539 -0.69565752366954225483 -0.63840084695916154978 -2.730052177678389036 -0.21154927987583560522 0.23430889985492950323 1.6596423348869644432 -0.90238632591952361306;0.022582673938657787938 2.1978330655164994845 -0.48458139173973213687 -0.080884428211143916121 -0.72359669082177024979 0.97520435635762225957 -0.0042288696958045508129 0.60081675851781435327 -0.64518134447715447255;-1.6980985821632812449 2.5532518984950125507 0.16456310966264051099 -0.15017425090385130848 0.75818799749968779356 -0.62879239550422483251 3.2273272311387573019 -1.896994688302226173 -0.48780875609589674502;0.34560518359965547441 -1.382338670894464272 0.3543543286814075377 -0.016844694064217395624 1.0154647829760363731 -0.96300160625215358579 1.5317180125924676481 -0.6875783894244176242 -0.98095534652015592414];

% Layer 2
b2 = 0.43624048099796736144;
LW2_1 = [-1.4011277226327307766 -1.0577438973056234595 -2.3303723824989726054 0.43618165061433200602 1.2181710308122883912 -1.2456205836808065257 1.7464903574712513645 1.3601296915863427817 -3.755791028219910288 -3.0045359511949687459 -1.3683825469732531221 1.2535763238290966726 -1.1321274667994201124 2.35909823523447848 -1.1621566060405914556];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0562863104043787;
y1_step1.xoffset = 1.12576;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
